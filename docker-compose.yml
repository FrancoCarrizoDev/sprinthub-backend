version: '3.8'

services:
  postgres:
    env_file:
      - .env
    image: postgres:15-alpine
    container_name: sprinthub-postgres
    environment:
      POSTGRES_DB: sprinthub_db
      POSTGRES_USER: sprinthub_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - sprinthub_network
    restart: unless-stopped

  mongodb:
    env_file:
      - .env
    image: mongo:6.0-focal
    container_name: sprinthub-mongodb
    environment:
      MONGO_INITDB_DATABASE: sprinthub_events
      MONGO_INITDB_ROOT_USERNAME: sprinthub_admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - sprinthub_network
    restart: unless-stopped

  redis:
    env_file:
      - .env
    image: redis:7.0-alpine
    container_name: sprinthub-redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - sprinthub_network
    restart: unless-stopped
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: sprinthub-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - sprinthub_network
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: sprinthub-kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: sprinthub-zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      - sprinthub_network
    restart: unless-stopped

volumes:
  postgres_data:
  mongodb_data:
  redis_data:

networks:
  sprinthub_network:
    driver: bridge